
const db = require('./database/db-pool');

const deleteUser = async (userId) => {
    let conn;

    try {
        conn = await db.getConnection();
        const result = await conn.query('DELETE FROM users WHERE telegram_id = ?', [userId]);

        if (result.affectedRows > 0) {
            return true; // –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ
        } else {
            return false; // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
        }
    } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–Ω–∫–µ—Ç—ã:', err);
        return false; // –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    } finally {
        if (conn) conn.end();
    }
};

const deleteFunction = async (ctx) => {
    const userId = ctx.from.id; // –ü–æ–ª—É—á–µ–Ω–∏–µ userId –∏–∑ –æ–±—ä–µ–∫—Ç–∞ ctx
    let userDeleted = false;
    try {
        userDeleted = await deleteUser(userId);
    } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏ —É–¥–∞–ª–µ–Ω–∏—è:', err);
    }
    if (userDeleted) {
        ctx.reply('üéâ –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞! –í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é, –µ—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è.');
    } else {
        ctx.reply('üòï –ö–∞–∂–µ—Ç—Å—è, —É –≤–∞—Å –Ω–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –∞–Ω–∫–µ—Ç—ã. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å –µ—ë, –ø—Ä–æ—Å—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –∫–æ–º–∞–Ω–¥–æ–π.');
    }

    let text = "üóÇÔ∏è\n\n";
    ctx.reply(text, {
        reply_markup: {
            keyboard: [
                [{text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'}],
            ],
            resize_keyboard: true,
            one_time_keyboard: true,
        },
    });
};

module.exports = {
    deleteFunction
};

