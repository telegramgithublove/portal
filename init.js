require('dotenv').config();
const { Telegraf, Markup, Scenes, session } = require('telegraf');
const bot = new Telegraf(process.env.BOT_TOKEN);
const util = require('util');
const { startCommand } = require ("./keyboards/greatKey");
const { deleteFunction } = require ("./delete")
const { createScenes } = require ('./scenes')
const { getUserProfile } = require ('./profiles/createProfileData')
const { dateUsers } = require('./DateUsers')
const { sendProfile } = require('./profiles/sendProfile')
const { showProfile } = require('./profiles/showProfile')
const  { offer } = require('./offer')
const db = require("./database/db-pool");



bot.use(session());

bot.hears('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', startCommand);
bot.command('start', startCommand);
bot.use((ctx, next) => {
    if (!ctx.session) {
        ctx.session = {};
    }
    if (!ctx.session.profiles) {
        ctx.session.profiles = []; // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –º–∞—Å—Å–∏–≤ –∞–Ω–∫–µ—Ç –∑–¥–µ—Å—å
    }
    if (ctx.session.currentUserIndex === undefined) {
        ctx.session.currentUserIndex = 0; // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    }
    return next()
});




createScenes(bot)



bot.action('fill_form', async (ctx) => {
    try {
        await ctx.answerCbQuery();
        await ctx.scene.enter('firstQuestion');
    } catch (err) {
        console.error("Error responding to callback query:", err);
        // Optionally, inform the user (consider the usability implications)
        await ctx.reply('Oops! There was an issue processing your request.');
    }
});

bot.action('update', (ctx) => {
    startCommand(ctx);
});

bot.action('updater', (ctx) => {
    startCommand(ctx);
});

bot.action('delete', async (ctx) => {
    try {
        await deleteFunction(ctx);
    } catch (err) {
        console.error(err);
        ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç—É –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –∞–Ω–∫–µ—Ç—ã.');
    }
});


bot.action('search', async (ctx) => {
    try {
        await ctx.answerCbQuery();


        await dateUsers(ctx);


    } catch (err) {
        console.error("Error responding to callback query:", err);
        await ctx.reply('Oops! There was an issue processing your request.');
    }
});


bot.action('fill_form', async (ctx) => {
    await ctx.answerCbQuery();
    await ctx.scene.enter('firstQuestion');
});

bot.action('next', async (ctx) => {
    // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ ctx.session.currentProfileIndex –∏ ctx.session.profiles –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã
    if (ctx.session.profiles && typeof ctx.session.currentProfileIndex !== 'undefined') {
        const nextIndex = ctx.session.currentProfileIndex + Math.floor(Math.random() * 2) + 2; // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –∏–Ω–¥–µ–∫—Å —á–µ—Ä–µ–∑ 2 –∏–ª–∏ 3 –∞–Ω–∫–µ—Ç—ã
        ctx.session.currentProfileIndex = nextIndex % ctx.session.profiles.length; // –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏–µ, –µ—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞

        await sendProfile(ctx); // –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é (–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞—Ü–∏–∫–ª–∏–≤—à—É—é—Å—è) –∞–Ω–∫–µ—Ç—É

    } else {
        // –í —Å–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –∞–Ω–∫–µ—Ç –∏–ª–∏ –∏–Ω–¥–µ–∫—Å–∞, —É–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞–Ω–∫–µ—Ç—ã
        ctx.reply('–ê–Ω–∫–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å –∏—Ö –∑–∞–≥—Ä—É–∑–∫–æ–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
    }
});

bot.action('like', async (ctx) => {
    const { profiles, currentProfileIndex } = ctx.session;

    if (profiles && Array.isArray(profiles) && currentProfileIndex < profiles.length) {
        const profile = profiles[currentProfileIndex];

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø—Ä–æ—Ñ–∏–ª—è –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (username)
        if (profile.username) {
            const telegramUrl = `https://t.me/${profile.username}`;
            ctx.reply(`–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è üòº ${telegramUrl}`);

        } else if (profile.telegram_id) {
            const firstName = `${profile.name} ${profile.surname}`;

            const formattedName = `[${firstName}](tg://user?id=${profile.telegram_id})`;
            const textPredict = "–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è üòº"; // –ó–∞–º–µ–Ω–∏—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É –Ω–∞ –≤–∞—à —Ç–µ–∫—Å—Ç
            const messageText = `${formattedName}, ${textPredict}`;

            ctx.replyWithMarkdownV2(messageText);

        } else {
            // –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∏ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∏ telegram_id
            ctx.reply('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ç–∞–∫—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.');
        }

        let text = `üëª`;

        ctx.reply(text, {
            reply_markup: {
                keyboard: [
                    [{text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'}],
                ],
                resize_keyboard: true,
                one_time_keyboard: true,
            },
        });
    }
});


bot.action('piar', (ctx) => {
    let text = "üéã\n\n";

// –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞
    ctx.reply(text, {
        reply_markup: {
            keyboard: [
                [{text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'}],
            ],
            resize_keyboard: true,
            one_time_keyboard: true,
        },
    });
    ctx.reply('–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –ø–∏–∞—Ä –∫–æ–º–ø–∞–Ω–∏—è –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ –ø–æ —Ä–∞–∑–Ω—ã–º –≥–æ—Ä–æ–¥–∞–º, –æ—Ç–¥–µ–ª—å–Ω—ã–º –≥–æ—Ä–æ–¥–∞–º –∏–ª–∏ –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏, —Ç–æ –≤—ã –ø–æ–ø–∞–ª–∏ –ø–æ –∞–¥—Ä–µ—Å—É! \n\nüöÄ –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–∞–º—É—é —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é –¥–ª—è –≤–∞—à–µ–π –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏. \n\nüí° –ù–∞—à–∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ —Å—Ö–µ–º—ã –ø–æ–¥—Ö–æ–¥—è—Ç –ø–æ–¥ –ª—é–±—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∏ –±—é–¥–∂–µ—Ç—ã. \n\nüí∞ –ù–µ –∑–Ω–∞–µ—Ç–µ, —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å? –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–∏–º –ø–∏–∞—Ä-–º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.\n\n–ù–∞–¥–µ–µ–º—Å—è –Ω–∞ —É—Å–ø–µ—à–Ω–æ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ! ü§ùüíºüåü\n\n–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –∏ —Å–≤—è–∑—å: [–ù–∞–ø–∏—Å–∞—Ç—å –ø–∏–∞—Ä-–º–µ–Ω–µ–¥–∂–µ—Ä—É](https://t.me/piarmenegerlove)', { parse_mode: 'Markdown' });
});


bot.action('complain', (ctx) => {
    ctx.session.complainStep = 'waiting_for_complaint';
    ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤–∞—à–µ–π –∂–∞–ª–æ–±—ã:');
});

bot.command('sendAd', async (ctx) => {
    try {
        const inviteLink = 'https://t.me/+7pzrwu-UNQg1MThi';
        const conn = await db.getConnection();
        const rows = await conn.query('SELECT * FROM users');
        conn.release();

        for (const row of rows) {
            try {
                if (row.telegram_id && row.telegram_id !== '') {
                    console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å telegram_id: ' + row.telegram_id);

                    const stringTelegramId = String(row.telegram_id);
                    const chat = await ctx.telegram.getChat(stringTelegramId);

                    if (chat) {
                        await ctx.telegram.sendMessage(stringTelegramId,  `
–ü—Ä–∏–≤–µ—Ç! üåü

–ü—Ä–∏–≥–ª–∞—à–∞–µ–º —Ç–µ–±—è –≤ –Ω–∞—à Telegram —á–∞—Ç –∑–Ω–∞–∫–æ–º—Å—Ç–≤! üí¨‚ù§Ô∏è  
–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –ª—é–¥–µ–π, –æ–±—â–∞—Ç—å—Å—è –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å –Ω–æ–≤—ã—Ö –¥—Ä—É–∑–µ–π! ü§ó

–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –∏ –ø–æ–ª—É—á–∏ –∫—É—á—É –Ω–æ–≤—ã—Ö —ç–º–æ—Ü–∏–π–π –æ—Ç –æ–±—â–µ–Ω–∏—è —Å –Ω–æ–æ–≤—ã–º–∏ –¥—Ä—É–∑—è–º–∏! üéâ‚ú®  
–ñ–¥–µ–º —Ç–µ–±—è! üòä \n\n ${inviteLink} 
        `);
                        console.log('–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å telegram_id: ' + row.telegram_id);
                    } else {
                        console.log('–ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å telegram_id: ' + row.telegram_id);
                    }
                } else {
                    console.log('telegram_id –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
                }
            } catch (error) {
                console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å telegram_id: ${row.telegram_id}`);
                console.error(error);
            }
        }

        ctx.reply('–†–µ–∫–ª–∞–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º');
    } catch (error) {
        console.error(error);
        ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–∫–ª–∞–º—ã');
    }
});

bot.on('text', async (ctx) => {
    if (ctx.session.complainStep === 'waiting_for_complaint') {
        const complaintText = ctx.message.text;
        let userIdentifier = ctx.from.username ? ctx.from.username : `ID ${ctx.from.id}`;
        const telegramUrl = ctx.from.username ? `https://t.me/${ctx.from.username}` : '';
        const messageText = `New complaint from ${userIdentifier}: ${complaintText}\nTelegram user channel: ${telegramUrl}`;

        await bot.telegram.sendMessage(6638651166, messageText);
        await ctx.reply('–í–∞—à–∞ –∂–∞–ª–æ–±–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ üöî');
        ctx.session.complainStep = null;
    }
    let text = "üöì\n\n";

// –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞
    ctx.reply(text, {
        reply_markup: {
            keyboard: [
                [{text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'}],
            ],
            resize_keyboard: true,
            one_time_keyboard: true,
        },
    });
});

bot.action('rules', async (ctx) => {
    await ctx.reply('–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã —á–µ—Ä–µ–∑ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞:\n' +
        '\n' +
        '1. –°–±–æ—Ä –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n' +
        '    –í—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –±–æ—Ç–∞ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã —á–µ—Ä–µ–∑ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞ —è–≤–ª—è–µ—Ç—Å—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ –º–æ–º–µ–Ω—Ç–∞ –µ–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–∞ –ø—É–±–ª–∏—á–Ω–æ–º —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª–µ.\n' +
        '    –ú—ã —Å–æ–±–∏—Ä–∞–µ–º —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –∞–Ω–∫–µ—Ç—ã: —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è, –∏–º—è, –≤–æ–∑—Ä–∞—Å—Ç, –≥–æ—Ä–æ–¥, –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ —Å–µ–±–µ –∏ –ø–∞—Ä—Ç–Ω–µ—Ä–∞, –∞ —Ç–∞–∫–∂–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.\n' +
        '    –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∞–Ω–∫–µ—Ç –Ω–∞ –ø—É–±–ª–∏—á–Ω–æ–º —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª–µ, –¥–æ—Å—Ç—É–ø–Ω–æ–º –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.\n' +
        '\n' +
        '2. –ó–∞—â–∏—Ç–∞ –ª–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n' +
        '    –ú—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–µ—Ä—ã –¥–ª—è –∑–∞—â–∏—Ç—ã –ª–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–æ –º–æ–º–µ–Ω—Ç–∞ –µ–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏. –ú—ã –æ–±—è–∑—É–µ–º—Å—è –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∏–ª–∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º.\n' +
        '\n' +
        '3. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å\n' +
        '    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ—Å—É—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –æ–±—è–∑—É—é—Ç—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.\n' +
        '\n' +
        '4. –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n' +
        '    –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—è —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ–≥—Ä–∞–º-–∞–∫–∫–∞—É–Ω—Ç –¥–ª—è —Å–≤—è–∑–∏, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–≥–ª–∞—à–∞—é—Ç—Å—è –Ω–∞ —Ç–æ, —á—Ç–æ–±—ã –¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∏–º–∏.\n' +
        '\n' +
        '5. –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏\n' +
        '    –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–∞–Ω–∞–ª–∞ –Ω–µ –Ω–µ—Å–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –ª—é–±—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –≤ –∞–Ω–∫–µ—Ç–µ.\n' +
        '\n' +
        '6. –ü—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n' +
        '    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–º–µ—é—Ç –ø—Ä–∞–≤–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ —Å–≤–æ–µ–π –∞–Ω–∫–µ—Ç—ã –∏ –ª–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è.\n' +
        '\n' +
        '7. –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å\n' +
        '    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ @xxxhummingbird –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∞–Ω–∫–µ—Ç—ã.\n' +
        '\n' +
        '8. –°–æ–≥–ª–∞—Å–∏–µ —Å —É—Å–ª–æ–≤–∏—è–º–∏\n' +
        '    –ò—Å–ø–æ–ª—å–∑—É—è –±–æ—Ç –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–≥–ª–∞—à–∞—é—Ç—Å—è —Å —É—Å–ª–æ–≤–∏—è–º–∏ –¥–∞–Ω–Ω–æ–π –ø–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.');
    // –î–æ–±–∞–≤—å—Ç–µ –∑–¥–µ—Å—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
    let text = "üíº\n\n";

// –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞
    ctx.reply(text, {
        reply_markup: {
            keyboard: [
                [{text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'}],
            ],
            resize_keyboard: true,
            one_time_keyboard: true,
        },
    });
});



bot.action('agreement', async (ctx) => {
    await ctx.reply('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ\n' +
        '\n' +
        '1. –ü—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –±–æ—Ç–∞ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã –Ω–∞ –∫–∞–Ω–∞–ª–µ, –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ, —á—Ç–æ –≤—ã —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏–π.\n' +
        '\n' +
        '2. –ü—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –∞–Ω–∫–µ—Ç—ã –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é: —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –∏–º—è, –≤–æ–∑—Ä–∞—Å—Ç, –≥–æ—Ä–æ–¥, –∫–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ —Å–µ–±–µ, –æ–∂–∏–¥–∞–µ–º–æ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.\n' +
        '\n' +
        '3. –í—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –æ–ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∞–Ω–∫–µ—Ç—ã –Ω–∞ –ø—É–±–ª–∏—á–Ω–æ–º —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª–µ –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–∏–¥–∏–º–æ–π –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.\n' +
        '\n' +
        '4. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ—Å—É—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –æ–±—è–∑—É—é—Ç—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. \n' +
        '\n' +
        '5. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—è —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ–≥—Ä–∞–º-–∞–∫–∫–∞—É–Ω—Ç –¥–ª—è —Å–≤—è–∑–∏, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å –Ω–∞ —Ç–æ, —á—Ç–æ–±—ã –¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏.\n' +
        '\n' +
        '6. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–∞–Ω–∞–ª–∞ –Ω–µ –Ω–µ—Å–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –ª—é–±—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ –∞–Ω–∫–µ—Ç–µ.\n' +
        '\n' +
        '7. –í —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∞–Ω–∫–µ—Ç—ã, –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ: @xxxhummingbird .\n' +
        '\n' +
        '8. –í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –≤—ã –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –≤–∞—à–µ–π –∞–Ω–∫–µ—Ç—ã. –í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –º—ã –Ω–µ–∑–∞–º–µ–¥–ª–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–∏–º –≤—Å—é –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –≤–∞–º–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n' +
        '\n' +
        '9. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞ —Å–æ–±–æ–π –ø—Ä–∞–≤–æ –≤–Ω–æ—Å–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —É—Å–ª–æ–≤–∏—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è. –õ—é–±—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±—É–¥—É—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª–µ, –∏ –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç—å—é –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —É—Å–ª–æ–≤–∏—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è. –í —Å–ª—É—á–∞–µ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ª—é–±—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π, –≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏.\n' +
        '\n' +
        '10. –ü–æ–ª—å–∑—É—è—Å—å –±–æ—Ç–æ–º –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏ –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è.\n' +
        '\n' +
        '–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã.');
    // –î–æ–±–∞–≤—å—Ç–µ –∑–¥–µ—Å—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
    let text = "üíº\n\n";

// –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞
    ctx.reply(text, {
        reply_markup: {
            keyboard: [
                [{text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'}],
            ],
            resize_keyboard: true,
            one_time_keyboard: true,
        },
    });
});
let text = "üíù\n\n";
bot.action('chat_love', (ctx) => {
    ctx.reply('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç –∑–Ω–∞–∫–æ–º—Å—Ç–≤! –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º –ø–æ —Å—Å—ã–ª–∫–µ: [–ß–∞—Ç –∑–Ω–∞–∫–æ–º—Å—Ç–≤](https://t.me/samarafriends)', {
        parse_mode: 'Markdown',
    });

    ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', {
        reply_markup: {
            keyboard: [
                [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' }],
            ],
            resize_keyboard: true,
            one_time_keyboard: true,
        },
    });
});



bot.action('offer', (ctx) => {
    offer(ctx);
});

bot.action('anketa', (ctx) => {
    showProfile(ctx);
});

bot.launch();


